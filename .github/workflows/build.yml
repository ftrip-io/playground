name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/ftrip.io.playground/.nuget/packages
      CONFIGURATION: Release

    steps:
      - name: Setup .NET Core 3.1
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 3.1

      - name: Install .NET ReportGenerator
        shell: bash
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool

      - uses: actions/checkout@v3

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: bash
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - uses: actions/cache@v3
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        shell: bash
        run: |
          dotnet restore /p:Configuration=$CONFIGURATION ftrip.io.playground/ftrip.io.playground.sln

      - name: Build, Analyze and Generate Code Coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: bash
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"ftrip-io_playground" /o:"ftrip-io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vstest.reportsPaths=TestResults/*.trx /d:sonar.cs.opencover.reportsPaths=TestResults/*/coverage.opencover.xml /d:sonar.coverage.exclusions="**Test*.cs"

          dotnet publish ftrip.io.playground/ftrip.io.framework-playground/ftrip.io.framework-playground.csproj \
            -c $CONFIGURATION
            --no-restore \
          dotnet test ftrip.io.playground/ftrip.io.framework-playground.unit-tests/ftrip.io.framework-playground.unit-tests.csproj \
            -c $CONFIGURATION \
            --no-restore \
            --no-build \
            --collect:"XPlat Code Coverage" \
            --results-directory TestResults/ \
            --logger "trx;LogFileName=unittests.trx" \
            --DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
          reportgenerator \
           -reports:TestResults/**/coverage.opencover.xml \
           -targetdir:coverage \
           -reporttypes:Html

          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        with:
          files: |
            TestResults/**/*.trx

      - name: Upload Code Coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: Code Coverage
          path: coverage
